import numpy as np



def Legendre(nb,nx,normalize=False):
    '''
    Legendre basis
    https://zh.wikipedia.org/wiki/%E5%8B%92%E8%AE%A9%E5%BE%B7%E5%A4%9A%E9%A1%B9%E5%BC%8F
    :param nx:mesh node of desecrate basis
    :param nb:term of basis
    :return: horizontal vectors as basis
    '''
    import numpy.polynomial.legendre as leg
    x=np.linspace(-1,1,nx)
    cc=np.identity(nx)
    base=leg.legval(x,cc)
    b=np.ones((nx,nx))
    coe=(b).T
    base=base*coe

    # for i in range(5):
    #     plt.plot(base[i], label='n=' + str(i))
    #     plt.legend()
    # plt.show()
    base=base[:nb]
    norm=np.linalg.norm(base,axis=1,keepdims=True)
    base_normed=base/norm
    if normalize==True:
        return base_normed
    else:
        return base

def Polynomial(nb,nx):
    '''
    :param nx:mesh node of desecrate basis
    :param nb:term of basis
    :return: horizontal vectors as basis
    '''
    x=np.linspace(-1,1,nx)
    nn=np.linspace(0,nb-1,nb)
    X,N=np.meshgrid(x,nn)
    base=X**N *np.sqrt((2*N+1)/2)


    return base
